import { HttpClientTestingModule } from '@angular/common/http/testing';
import { NoopAnimationsModule } from '@angular/platform-browser/animations';
import { ActivatedRoute } from '@angular/router';
import { TranslocoService, provideTransloco } from '@ngneat/transloco';
import { TranslocoHttpLoader } from 'src/transloco-loader';

export function createTestBedConfig(
  componentName: any,
  serviceProviders: any[],
  mockActivatedRoute: any,
  declarations: any[] = [],
  params?: any
): any {
  return {
    imports: [componentName, HttpClientTestingModule, NoopAnimationsModule],
    declarations: [...declarations],
    providers: [
      provideTransloco({
        config: {
          defaultLang: 'en',
          availableLangs: ['en'],
        },
        loader: TranslocoHttpLoader,
      }),
      TranslocoService,
      {
        provide: ActivatedRoute,
        useValue: {
          data: {
            pipe: () => {
              return {
                subscribe: (fn: (value: any) => void) => fn(mockActivatedRoute),
              };
            },
            subscribe: (fn: (value: any) => void) => fn(mockActivatedRoute),
          },
          snapshot: {
            params: params ?? undefined,
          },
        },
      },
      ...serviceProviders,
    ],
  };
}

export const mockTableDetailsData = {
  alias: 'test-table',
  name: 'test-table',
  label: 'label',
  description: 'desc',
  native: [],
  plural: 'labels',
  is_view: false,
  primary_key: ['ja'],
  name_field: null,
  field: [
    {
      alias: 'isActive',
      name: 'active',
      label: 'active',
      description: null,
      native: [],
      type: 'boolean',
      db_type: 'tinyint(1)',
      length: 1,
      precision: null,
      scale: null,
      default: true,
      required: false,
      allow_null: false,
      fixed_length: false,
      supports_multibyte: false,
      auto_increment: false,
      is_primary_key: false,
      is_unique: false,
      is_index: false,
      is_foreign_key: false,
      ref_table: null,
      ref_field: null,
      ref_on_update: null,
      ref_on_delete: null,
      picklist: null,
      validation: ['{"success": false}'],
      db_function: [
        {
          use: ['SELECT', 'FILTER'],
          function: 'upper(fieldname)',
        },
        {
          use: ['UPDATE'],
          function: 'max(fieldname)',
        },
      ],
      is_virtual: false,
      is_aggregate: false,
    },
    {
      alias: 'test',
      name: 'another',
      label: 'Another',
      description: 'test',
      native: [],
      type: 'integer',
      db_type: 'int(11)',
      length: 11,
      precision: null,
      scale: null,
      default: 0,
      required: false,
      allow_null: true,
      fixed_length: false,
      supports_multibyte: false,
      auto_increment: false,
      is_primary_key: false,
      is_unique: false,
      is_index: false,
      is_foreign_key: false,
      ref_table: null,
      ref_field: null,
      ref_on_update: null,
      ref_on_delete: null,
      picklist: ['1', '2', '3'],
      validation: null,
      db_function: null,
      is_virtual: false,
      is_aggregate: false,
    },
    {
      alias: '',
      name: 'game',
      label: 'game',
      description: null,
      native: [],
      type: 'user_id',
      db_type: 'int(11)',
      length: 11,
      precision: null,
      scale: null,
      default: null,
      required: true,
      allow_null: false,
      fixed_length: false,
      supports_multibyte: false,
      auto_increment: false,
      is_primary_key: false,
      is_unique: true,
      is_index: false,
      is_foreign_key: false,
      ref_table: null,
      ref_field: null,
      ref_on_update: null,
      ref_on_delete: null,
      picklist: null,
      validation: null,
      db_function: [
        {
          use: ['filter', 'insert'],
          function: 'upper(fieldname)',
        },
        {
          use: ['select', 'filter', 'insert', 'update'],
          function: 'upper(fieldname)',
        },
        {
          use: ['update'],
          function: 'upper(fieldname)',
        },
      ],
      is_virtual: false,
      is_aggregate: false,
    },
    {
      alias: null,
      name: 'ja',
      label: 'Ja',
      description: null,
      native: [],
      type: 'id',
      db_type: 'int(11)',
      length: 11,
      precision: null,
      scale: null,
      default: null,
      required: false,
      allow_null: false,
      fixed_length: false,
      supports_multibyte: false,
      auto_increment: true,
      is_primary_key: true,
      is_unique: true,
      is_index: false,
      is_foreign_key: false,
      ref_table: null,
      ref_field: null,
      ref_on_update: null,
      ref_on_delete: null,
      picklist: null,
      validation: null,
      db_function: null,
      is_virtual: false,
      is_aggregate: false,
    },
  ],
  related: [
    {
      alias: 'test-relationship',
      name: 'app_by_is_active',
      label: 'label-test-relationship',
      description: null,
      native: [],
      type: 'has_one',
      field: 'active',
      is_virtual: true,
      ref_service_id: 45,
      ref_table: 'app',
      ref_field: 'is_active',
      ref_on_update: null,
      ref_on_delete: null,
      junction_service_id: null,
      junction_table: null,
      junction_field: null,
      junction_ref_field: null,
      always_fetch: false,
      flatten: false,
      flatten_drop_prefix: false,
    },
  ],
  constraints: {
    primary: {
      constraint_type: 'PRIMARY KEY',
      constraint_schema: 'dreamfactory',
      constraint_name: 'PRIMARY',
      table_schema: 'dreamfactory',
      table_name: 'test-table',
      column_name: 'ja',
      referenced_table_schema: null,
      referenced_table_name: null,
      referenced_column_name: null,
      update_rule: null,
      delete_rule: null,
    },
    game: {
      constraint_type: 'UNIQUE',
      constraint_schema: 'dreamfactory',
      constraint_name: 'game',
      table_schema: 'dreamfactory',
      table_name: 'test-table',
      column_name: 'game',
      referenced_table_schema: null,
      referenced_table_name: null,
      referenced_column_name: null,
      update_rule: null,
      delete_rule: null,
    },
    undx_dreamfactory_test_table_game: {
      constraint_type: 'UNIQUE',
      constraint_schema: 'dreamfactory',
      constraint_name: 'undx_dreamfactory_test-table_game',
      table_schema: 'dreamfactory',
      table_name: 'test-table',
      column_name: 'game',
      referenced_table_schema: null,
      referenced_table_name: null,
      referenced_column_name: null,
      update_rule: null,
      delete_rule: null,
    },
    undx_dreamfactory_test_table_ja: {
      constraint_type: 'UNIQUE',
      constraint_schema: 'dreamfactory',
      constraint_name: 'undx_dreamfactory_test-table_ja',
      table_schema: 'dreamfactory',
      table_name: 'test-table',
      column_name: 'ja',
      referenced_table_schema: null,
      referenced_table_name: null,
      referenced_column_name: null,
      update_rule: null,
      delete_rule: null,
    },
  },
  access: 31,
};
