{
  "common": {
    "save": "Save",
    "cancel": "Cancel",
    "close": "Close",
    "create": "Create",
    "delete": "Delete",
    "edit": "Edit",
    "select": "Select",
    "submit": "Submit",
    "browse": "Browse"
  },
  "home": {
    "resourceLinks": {
      "gettingStartedGuide": "Getting Started Guide",
      "writtenTutorials": "Written Tutorials",
      "videoTutorials": "Video Tutorials",
      "fullDocumentation": "Full Documentation",
      "communityForum": "Community Forum",
      "bugFeatureRequests": "Bugs and Feature Requests",
      "twitter": "DreamFactory on Twitter",
      "blog": "DreamFactory blog",
      "contactSupport": "Contact Support"
    },
    "welcomePage": {
      "watchVideoCta": "Watch our video!",
      "welcomeHeading": "Welcome to DreamFactory!",
      "welcomeSubHeading": "DreamFactory provides all of the backend services that you need to build great mobile, web, and IoT applications. Follow the links below to get started:",
      "ossUsersHeading": "Attention OSS users",
      "ossUsersText": "Did you know DreamFactory’s commercial solutions include connectors for Microsoft SQL Server, Oracle, SOAP-to-REST, API limiting, ELK stack integration, and much more? Contact Us at <a href=\"mailto:sales@dreamfactory.com\">sales@dreamfactory.com</a> to arrange a demo with our engineering team!",
      "hearFromYouHeading": "We want to hear from you!",
      "hearFromYouText": "Has DreamFactory made a difference in your organization? Are you doing something novel and interesting with our software? We’d love to add your story to the Dreamfactory.com user showcase! E-mail us at <a href=\"mailto:info@dreamfactory.com\">info@dreamfactory.com</a> with your project details and we’ll add your organization name, URL, and story to our site!",
      "clientPlatformHeading": "Click on a client platform below to download a sample application and learn how to make API calls:",
      "nativeExamplesHeading": "Native Examples",
      "javaScriptExamplesHeading": "JavaScript Examples"
    },
    "quickstartPage": {
      "quickstartHeading": "Quickstart",
      "quickstartSubHeading": "An example application is a great way to learn how to make basic API calls to DreamFactory.",
      "quickstartSteps": {
        "stepOne": "Click on your favorite client platform below. This will take you to a GitHub repo with an example application.",
        "stepTwo": "Follow the instructions in the README file to get the application running in your new DreamFactory instance.",
        "stepThree": "If you have any problems, click on the \"Resources\" button at left for links to documentation, product tutorials, and technical support."
      },
      "clientPlatformHeading": "Click on a client platform below to download a sample application and learn how to make API calls:",
      "nativeExamplesHeading": "Native Examples",
      "javaScriptExamplesHeading": "JavaScript Examples"
    },
    "resourcesPage": {
      "resourcesHeading": "Resources",
      "resourcesSubHeading": "DreamFactory provides all of the backend services that you need to build great mobile, web, and IoT applications. Follow the links below to get started:"
    },
    "downloadPage": {
      "downloadHeading": "DreamFactory Downloads",
      "downloadText": "DreamFactory is an open source software package available under the Apache License. The source code is free to download, use, and share. You can install DreamFactory in a number of ways: using a cloud service, a local install, or on any Linux or Windows server. The links below provide access to downloads for your preferred platform.",
      "cloudInstallersHeading": "Cloud Installers",
      "localInstallersHeading": "Local Installers"
    },
    "brandNames": {
      "oracleCloud": "Oracle Cloud",
      "bitnami": "Bitnami",
      "docker": "Docker",
      "amazon": "Amazon",
      "azure": "Azure",
      "google": "Google",
      "vmWare": "VMware",
      "linux": "Linux",
      "osx": "OS X",
      "windows": "Windows",
      "gitHubSource": "GitHub Source",
      "objectiveC": "Objective-C",
      "appleSwift": "Apple Swift",
      "androidJava": "Android Java",
      "microsoftNet": "Microsoft .NET",
      "javaScript": "JavaScript",
      "ionic": "Ionic",
      "titanium": "Titanium",
      "angularJs": "Angular JS",
      "angular2": "Angular 2",
      "react": "React"
    }
  },
  "userManagement": {
    "requiredForLogin": "Required for login",
    "resetPassword": "Reset Password",
    "passwordReset": "Password Reset",
    "login": "Login",
    "forgotPassword": "Forgot Password",
    "requestPasswordReset": "Request Password Reset",
    "invitatonConfirmation": "Invitation Confirmation",
    "registrationConfirmation": "Registration Confirmation",
    "confirmUser": "Confirm User",
    "register": "Register",
    "registerSuccess": {
      "header": "Registration Success",
      "title": "Thanks For Registering!",
      "message": "A confirmation email has been sent to the email address that you registered with. Upon confirmation you will be able to login to the application. Thanks!"
    },
    "oAuth": "OAuth Login",
    "saml": "SAML 2.0 Login",
    "controls": {
      "username": {
        "label": "Choose Username",
        "altLabel": "Enter Username",
        "optional": "(Optional, defaults to email address)",
        "errors": {
          "required": "Username is required"
        }
      },
      "email": {
        "label": "Enter Email",
        "errors": {
          "required": "Email is required",
          "invalid": "Invalid email format"
        }
      },
      "firstName": {
        "label": "Enter First Name",
        "errors": {
          "required": "First name is required"
        }
      },
      "lastName": {
        "label": "Enter Last Name",
        "errors": {
          "required": "Last name is required"
        }
      },
      "displayName": {
        "label": "Enter Display Name",
        "errors": {
          "required": "Display name is required"
        }
      },
      "oldPassword": {
        "label": "Enter Old Password",
        "errors": {
          "required": "Old password is required"
        }
      },
      "password": {
        "label": "Enter Password",
        "altLabel": "Confirm new password",
        "errors": {
          "required": "Password is required",
          "length": "Password must be at least 5 characters long"
        }
      },
      "verifyPassword": {
        "label": "Verify Password",
        "altLabel": "Verify new password"
      },
      "confirmationCode": {
        "label": "Enter confirmation code",
        "errors": {
          "required": "Confirmation code is required"
        }
      },
      "confirmPassword": {
        "label": "Confirm Password",
        "altLabel": "Confirm new password",
        "errors": {
          "required": "Confirm password is required",
          "match": "Passwords do not match"
        }
      },
      "services": {
        "label": "Services"
      },
      "setSecurityQuestion": {
        "label": "Set Security Question"
      },
      "setPassword": {
        "label": "Set Password"
      },
      "securityQuestion": {
        "label": "Security Question"
      },
      "securityAnswer": {
        "label": "Enter security answer",
        "errors": {
          "required": "Security answer is required"
        }
      },
      "phone": {
        "label": "Enter telephone number"
      },
      "currentPassword": {
        "label": "Enter current password",
        "errors": {
          "required": "Required if Changing Email"
        }
      },
      "sendInvite": {
        "label": "Send Email Invite"
      }
    },
    "alerts": {
      "resetEmailSent": "A password reset email has been sent to the user's email address."
    },
    "profile": {
      "tabs": {
        "details": "Details",
        "securityQuestion": "Security Question",
        "password": "Password"
      },
      "alerts": {
        "detailsUpdated": "Profile updated successfully",
        "securtyQuestionUpdated": "Security question updated successfully",
        "passwordUpdated": "Password updated successfully"
      }
    }
  },
  "apps": {
    "manageApplications": "Manage Applications",
    "manage": "Manage",
    "import": "Import",
    "search": "Search",
    "deleteApp": "Delete app",
    "deleteSelectedApps": "Delete selected apps",
    "launchApp": "Launch app",
    "sampleApps": {
      "label": "Sample Apps",
      "options": {
        "android": "Android",
        "iosObjectiveC": "iOS Objective-C",
        "iosSwift": "iOS Swift",
        "javascript": "JavaScript",
        "angularJs": "AngularJS",
        "angular2": "Angular 2",
        "ionic": "Ionic",
        "Titanium": "Titanium",
        "ReactJS": "ReactJS",
        "dotnet": ".NET"
      }
    },
    "tableHeadings": {
      "id": "ID",
      "name": "Name",
      "role": "Role",
      "apiKey": "API Key",
      "description": "Description",
      "active": "Active"
    },
    "createApp": {
      "label": "Create Application",
      "applicationName": {
        "label": "Application Name",
        "tooltip": {
          "label": "Display Name",
          "text": "The display name or label for your app, seen by users of the app in the LaunchPad UI."
        },
        "error": "Application name required"
      },
      "defaultRoleFilter": "Default Role Filter",
      "description": {
        "label": "Description",
        "tooltip": {
          "text": "The app description, seen by users of the app in the LaunchPad UI."
        }
      },
      "defaultRole": {
        "label": "Assign a Default Role",
        "tooltip": {
          "text": "Unauthenticated or guest users of the app will have this role."
        },
        "options": {
          "noRole": "-- No available filtered roles --"
        }
      },
      "active": "Active",
      "appLocation": {
        "label": "App Location",
        "tooltip": {
          "text": "Select File Storage if you want to store your app code on your DreamFactory instance or some other remote file storage. Select Native for native apps or running the app from code on your local machine (CORS required). Select URL to specify a URL for your app."
        },
        "options": {
          "noStorage": "No Storage Required - remote device, client, or desktop.",
          "fileStorage": {
            "label": "On a provisioned file storage service.",
            "storageService": {
              "label": "Storage Service",
              "tooltip": "Where to store the files for your app.",
              "options": {
                "file": "Local File Storage",
                "log": "Local Log Storage"
              }
            },
            "storageFolder": {
              "label": "Storage Folder",
              "tooltip": "The folder on the selected storage service.",
              "placeholder": "Enter Storage Container"
            },
            "launchPath": {
              "label": "Launch Path",
              "tooltip": "The is the file to load when your app is run. Default is index.html.",
              "placeholder": "Enter default path and file to launch."
            }
          },
          "webServer": {
            "label": "On this web server.",
            "pathToApp": {
              "label": "Path to Application",
              "tooltip": "The is the file to load when your app is run. Default is index.html."
            }
          },
          "remoteUrl": {
            "label": "On a remote URL.",
            "url": {
              "label": "URL to Application",
              "tooltip": "Applications can consist of only a URL. This could be an app on some other server or a web site URL."
            }
          },
          "urlPath": "The URL for this app is:"
        }
      }
    },
    "importApp": {
      "title": "Import Application",
      "subtitle": "Select App Package File",
      "description": "Select one of the sample apps below, enter the URL for a package file, or browse for a local package file. Click 'Import' to add the app to your DreamFactory instance.",
      "options": {
        "android": "Address Book for Android",
        "iosObjectiveC": "Address Book for iOS Objective-C",
        "iosSwift": "Address Book for iOS Swift",
        "javascript": "Address Book for JavaScript",
        "angularJs": "Address Book for AngularJS",
        "angular2": "Address Book for Angular 2",
        "ionic": "Address Book for Ionic",
        "titanium": "Address Book for Titanium",
        "reactJs": "Address Book for ReactJS",
        "dotnet": "Address Book for .NET"
      },
      "url": {
        "label": "Package URL",
        "placeholder": "Enter URL to package file"
      },
      "optionsPrefix": "Address Book for ",
      "storageService": "Storage Service (optional)",
      "storageFolder": "Storage Folder (optional)",
      "files": "Files",
      "logs": "Logs",
      "error": "File or File URL Required"
    }
  },
  "nav": {
    "home": {
      "header": "Home",
      "welcome": { "header": "Welcome" },
      "resources": { "header": "Resources" },
      "quickstart": { "header": "Quickstart" },
      "download": { "header": "Download" }
    },
    "admins": {
      "nav": "Admins",
      "header": "Manage Admins",
      "create": { "header": "Create a new admin" },
      "edit": { "header": "Edit" }
    },
    "profile": { "header": "Profile" },
    "logout": { "header": "Logout" },
    "roles": { "header": "Roles" },
    "services": { "header": "Services" },
    "apps": { "header": "Apps" },
    "users": {
      "nav": "Users",
      "header": "Manage Users",
      "create": { "header": "Create a new user" },
      "edit": { "header": "Edit" }
    },
    "api-docs": { "header": "API Docs" },
    "schema": { "header": "Schema" },
    "data": { "header": "Data" },
    "files": { "header": "Files" },
    "scripts": { "header": "Scripts" },
    "config": { "header": "Config" },
    "package-manager": { "header": "Packages" },
    "limits": { "header": "Limits" },
    "scheduler": { "header": "Scheduler" },
    "reports": { "header": "Reports" }
  },
  "admins": {
    "accessByTabs": "Access by Tabs",
    "alerts": {
      "new": "For new Admins you can send an email invite so they can set their own password, or set a password for them now.",
      "restrictedAdmin": "Restricted admin",
      "autoRole": "An auto-generated role will be created for this admin.",
      "roleId": "Role id: {{roleId}}",
      "createdSuccess": "Admin created successfully",
      "updateSuccess": "Admin updated successfully",
      "deleteSuccess": "Admin deleted successfully",
      "importSuccess": "Admin imported successfully",
      "exportSuccess": "Admin exported successfully",
      "inviteSent": "An email invite has been sent."
    }
  },
  "users": {
    "alerts": {
      "new": "For new Users you can send an email invite so they can set their own password, or set a password for them now.",
      "createdSuccess": "User created successfully",
      "updateSuccess": "User updated successfully",
      "deleteSuccess": "User deleted successfully",
      "importSuccess": "User imported successfully",
      "exportSuccess": "User exported successfully",
      "inviteSent": "An email invite has been sent."
    }
  },
  "alerts": {
    "duplicateEmail": "Email address already exists",
    "close": "Close alert"
  },
  "save": "Save",
  "update": "Update",
  "confirmed": "Confirmed",
  "pending": "Pending",
  "id": "ID",
  "email": "Email",
  "displayName": "Display Name",
  "firstName": "First Name",
  "lastName": "Last Name",
  "active": "Active",
  "registration": "Registration",
  "filter": "Filter",
  "edit": "Edit",
  "delete": "Delete",
  "editRow": "Edit row {{id}}",
  "deleteRow": "Delete row {{id}}",
  "selectRow": "Select row {{id}}",
  "selectAll": "Select All",
  "deselectRow": "Deselect row {{id}}",
  "deselectAll": "Deselect all",
  "sortCleared": "Sorting cleared",
  "sortedAsc": "Sorted ascending",
  "sortedDesc": "Sorted descending",
  "search": "Search",
  "newEntry": "Create a new entry",
  "exportList": "Export list",
  "importList": "Import list",
  "description": "Description",
  "cancel": "Cancel",
  "basic": "Basic",
  "selectAnOption": "Select an option",
  "label": "Lookup Keys",
  "name": "Name",
  "value": "Value",
  "private": "Private",
  "desc": "Lookup keys for service configuration and credentials must be made private.",
  "noKeys": "No lookup keys."
}
